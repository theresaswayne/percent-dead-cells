# find_maxima_thresh.py
# testing ways to "find maxima" with a threshold and return an ROI showing positions

# tolerance =     /** maximum height difference between points that are not counted as separate maxima */


# ---- IMPORTS

from ij import IJ, WindowManager, ImagePlus
from ij.gui import Roi, PolygonRoi, FreehandRoi, Line, ProfilePlot
from ij.plugin.frame import RoiManager
from ij.measure import Calibration, ResultsTable
from ij.process import ImageProcessor
from ij.plugin.filter import MaximumFinder


# ---- HELPER FUNCTION

def get_roi_manager(new=False):
	"""
	flexible ROI mgr handling, copied from Particles_From_Mask.py template in Fiji
	if new = True, a new blank mgr is returned
	if new = False (default) and the ROI manager is open, returns that mgr.
	if new = False and the ROI manager is NOT open, creates a new one without throwing an error
	"""
	rm = RoiManager.getInstance()
	if not rm:
		rm = RoiManager()
	if new:
		rm.runCommand("Reset")
	return rm


# ---- SETUP 
imp = IJ.openImage("http://imagej.nih.gov/ij/images/m51.zip") # galaxy, 16 bit dark background
imp.show()
rm = get_roi_manager(new=True)

ip = imp.getProcessor()
mf = MaximumFinder()
THRESH = 700.0

# ---- METHOD 1: IJ.RUN("Find Maxima")
# Menu-based find maxima command -- does not support threshold

IJ.run(imp, "Find Maxima...", "noise=100 output=[Point Selection]")
rm.addRoi(imp.getRoi());
rm.rename(0, "Maxima without threshold")
rm.select(0)
IJ.run(imp, "Measure", "")
rt = ResultsTable.getResultsTable()
CountMethod1 = rt.getCounter()
CountMethod1 = float(CountMethod1)
rt.reset() # supposed to reset the results table
postReset = rt.getCounter()
print "After resetting there are " + str(postReset) + " results"
IJ.run("Select None")
print "Using the IJ.run method with no threshold, I found "+ str(CountMethod1) + " maxima."


# ---- METHOD 2: API findMaxima WITH THRESHOLD AND SINGLE POINTS 
# findMaxima(ImageProcessor ip, double tolerance, double threshold, int outputType, boolean excludeOnEdges, boolean isEDM)
# source: https://github.com/imagej/ImageJA/blob/8e283502055d25b9f0456f4aad95afa30a649d45/src/main/java/ij/plugin/filter/MaximumFinder.java
# note LIST produces list of coors, SINGLE POINTS produces a bunch of points that are shown by the code below.
# POINT_SELECTION is supposed to give just that but can't figure out how to get it in the manager
# https://stackoverflow.com/questions/26526269/image-analysis-finding-proteins-in-an-image
# https://github.com/bgruening/galaxytools/blob/18b441b263846cece9c5527cab0de66a54ecba3a/tools/image_processing/imagej2/imagej2_find_maxima/jython_script.py


maxima = mf.findMaxima(ip, 100.0, THRESH, MaximumFinder.SINGLE_POINTS, False, False)

findmaximashow = ImagePlus("Found Maxima", maxima)
findmaximashow.show() # an image of all the points
maximaip = findmaximashow.getProcessor()
maximahist = maximaip.getHistogram()
CountMethod2 = maximahist[255]
print "Using the findMaxima method with a threshold of " + str(THRESH) + ", I found "+ str(CountMethod2) + " maxima."

IJ.setRawThreshold(findmaximashow, 255, 255, "red")
IJ.run(findmaximashow, "Create Selection", "")
rm.addRoi(findmaximashow.getRoi())
rm.rename(1, "Maxima with threshold")


# ---- METHOD 3-4: API getMaxima WITH THE POINTS COUNTED OR ADDED TO THE RESULTS TABLE

maxima = mf.getMaxima(ip, 100.0, False)
CountMethod3 = maxima.npoints
print "Using the getMaxima method with no threshold , I found " + str(CountMethod3) + " maxima."

rt = ResultsTable()
for i in range(maxima.npoints):
    rt.incrementCounter()
    rt.addValue("X", maxima.xpoints[i])
    rt.addValue("Y", maxima.ypoints[i])

rt.show("Results")
CountMethod4 = rt.getCounter()
print "By counting points generated by getMaxima, I found " + str(CountMethod4) + " maxima."
# TODO: add these to the ROI mgr




# TODO: as alternative, check out HMaxima transform from landini, basically subtracting the threshold before running the find maxima